#compdef lb-run

local -a projects
local -a days
local -a common_commands

# at the time of completion, the environment which will be used for execution
# doesn't exist. Therefore, dst-dump and others will not be found by the
# zsh-standard function _command_names. I expand the list by a few hard coded
# commands.

common_commands=(gaudirun.py dst-dump dst-explorer bender db-tags)
days=(Mon Tue Wed Thu Fri Sat Sun today)

# hard coded list of possible projects (I assume non-application projects like
# Phys will not be used ...)
projects=(Brunel Bender DaVinci Moore Urania Erasmus Tesla Gauss LHCbDirac Ganga)
#_describe 'projects' projects

__projects () {
  compadd "$@" -S '/' ${projects}
}
__runnablestuff () {
  if [ $CURRENT -eq 1 ]; then
    _describe -V "commonly used commands" common_commands
  fi
  _normal
}
__list_versions () {
  if [ $CURRENT -eq 2 ] ; then
    local -a versionlist
    versionlist=($(lb-run -l $@ | sed "s/ .*//" | sort -r -V | uniq | python /afs/cern.ch/user/p/pseyfert/lb-zsh/mysort.py))
    # FIXME: do version sorting in python
    #versionlist=($(lb-run -l $@ | sed "s/ .*//" | python /afs/cern.ch/user/p/pseyfert/lb-zsh/mysort.py))
    _describe -V 'project versions' versionlist
    return
  fi
  shift 2 words
  (( CURRENT-- ))
  (( CURRENT-- ))
  __runnablestuff
}

__check_nightlies() {
  for ((i = 1 ; i <= $CURRENT ; i++))
  do
    if [ "$words[$i]" = "-c" ] ; then
      localcmtconfig=$words[$(( i+1 ))]
    fi
  done
  for ((i = $NORMARG; i > 2; i--));
  do
    shift words
    (( CURRENT-- ))
  done
  if [ $CURRENT -eq 2 ] ; then
    if compset -P 1 '*/'; then
      project=${(S)IPREFIX#/}
      if (( ${+localcmtconfig} )) ; then
        __list_versions "-c" $localcmtconfig $project
      else
        __list_versions $project
      fi
    else
      _alternative 'projects:Projects:__projects' 'nightlyswitch:nightly:((--nightly\:"run nightlies"))'
    fi
  elif [ "$words[2]" = "--nightly" ] ; then
    if [ $CURRENT -eq 3 ] ; then
      # slot mandatory
      _alternative ':slots:((lhcb-head lhcb-upgradeTracking))'
    elif [ $CURRENT -eq 4 ] ; then
      # either day or project
      if compset -P 1 '*/'; then
        project=${(S)IPREFIX#/}
        slot=$words[3]
        shift 2 words
        (( CURRENT-- ))
        (( CURRENT-- ))
        if (( ${+localcmtconfig} )) ; then
          __list_versions "-c" $localcmtconfig "--nightly" $slot $project
        else
          __list_versions "--nightly" $slot $project
        fi
      else
        _alternative 'projects:Projects:__projects' 'days:days:(($days))'
      fi
    elif [[ $CURRENT -eq 5 && ${days[(r)$words[4]]} == $words[4] ]] ; then
      #http://stackoverflow.com/questions/5203665/zsh-check-if-string-is-in-array
      # if previous was day, then project

      if compset -P 1 '*/'; then
        project=${(S)IPREFIX#/}
        slot=$words[3]
        local -a day
        day=$words[4]
        shift 3 words
        (( CURRENT-- ))
        (( CURRENT-- ))
        (( CURRENT-- ))
        if (( ${+localcmtconfig} )) ; then
          __list_versions "-c" $localcmtconfig "--nightly" $slot $day $project
        else
          __list_versions "--nightly" $slot $day $project
        fi
      else
        _alternative ':Projects:__projects'
      fi
    elif [[ ${days[(r)$words[4]]} == $words[4] ]] ; then
      # we're now forwarding to _normal, there was a day in the command line
      shift 3 words
      (( CURRENT-- ))
      (( CURRENT-- ))
      (( CURRENT-- ))
      __list_versions
    else
      # we're now forwarding to _normal, there was no day in the command line
      shift 2 words
      (( CURRENT-- ))
      (( CURRENT-- ))
      __list_versions
    fi
  else
    # suggest version, or forward further
    __list_versions $words[2]
  fi

}
__listcmt () {
  local -a theenvs
  theenvs=(x86_64-slc6-gcc62-dbg x86_64-slc6-gcc62-opt x86_64-slc6-gcc48-dbg x86_64-slc6-gcc48-opt x86_64-slc6-gcc49-dbg x86_64-slc6-gcc49-do0 x86_64-slc6-gcc49-opt)
  _describe 'cmtconfig' theenvs
}

integer NORMARG
_arguments -n '-l[list versions]' '-c[specify platform]:CMTCONFIG:__listcmt' '(- 1)*: :__check_nightlies'

